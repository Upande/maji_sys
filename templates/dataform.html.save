{% extends 'base.html' %}

{% block title %}MajiSYS - Data Entry Form{% endblock title %}
{% block extra_head %}
<link href="{{ STATIC_URL }}css/c3.css" rel="stylesheet" type="text/css">

<script src="{{ STATIC_URL }}js/react.min.js"></script>
<script src="{{ STATIC_URL }}js/moment.js"></script>
<script src="{{ STATIC_URL }}js/d3.js" charset="utf-8"></script>
<script src="{{ STATIC_URL }}js/c3.js"></script>
<style>
        table{counter-reset:section;}
                .count:before
                {
                counter-increment:section;
                content:counter(section);
                }
        .form-horizontal .control-label {
                text-align: right;
        }
</style>
{% endblock extra_head %}

{% block main_content %}

<div class="container">
  
  <div class="row">
    <div class="box">
      <div class="col-lg-12">
        <hr>
        <h2 class="intro-text text-center">Metadata
          <strong>Form</strong>
        </h2>
        <hr>
        <div class="col-md-5">
	  <!-- An Iframe sat here. Need to reuse space for something else -->
	  <h2 class="intro-text text-center"> Form </h2>
	  <form action='dataform' class="form-horizontal" method="POST">{% csrf_token %}
	    <div class="row">
	      <div class="col-md-12 form-group">
		<label class="col-sm-4 control-label">Feature</label>
		<div class="col-sm-8">
		  <select id="feature" name="feature" class="form-control">
		    <option value="Z">-Select Feature-</option>
		    {% for f in features %}
		    <option value="{{ f.featureclasskey }}">{{ f.featureclassname }}</option>
		    {% endfor %}
		  </select>
		</div>
	      </div>
	    </div>
	    <div class="row">
	      <div class="col-md-12 form-group">
		<label class="col-sm-4 control-label">Parameter</label>
		<div class="col-sm-8">
		  <select id = "parameter" name="parameter" class="form-control" disabled="true">
		    <option>-Select Parameter-</option>
		  </select>
		</div>
	      </div>
	    </div>
	    <div class="row">
	      <div class="col-md-12 form-group" align="center">
		<label class="col-sm-4 control-label">Location:</label>
		<div class="col-sm-8">
		  <select name="location" class="form-control">
		    <option>-Select Location-</option>
		    {% for location in locations %}
		    <option value="{{ location.locationkey }}">{{ location.shortname }}</option>
		    {% endfor %}
		  </select>
		</div>
	      </div>
	    </div>
	    <div class="row">
	      <div class="col-sm-12 form-group" align="center">
		<label class="col-sm-4 control-label">Observer:</label>
		<div class="col-sm-8">
		  <input name="observer" class="form-control" readonly="true" value="{{ request.user.username }}">
		</div>
	      </div>
	    </div>
	    <div class="row">
	      <div class="col-md-12 form-group" align="center">
		<label class="col-sm-4 control-label">Start date:</label>
		<div class='col-sm-7 input-group date' id='datetimepicker1'>
	          <input type='text' class="form-control" name="startdate" id="startdate" value=""/>
		  <span class="input-group-addon">
		    <span class="glyphicon glyphicon-calendar"></span>
		  </span>
		</div>
              </div>
	    </div>
	    <div class="row">
	      <div class="col-md-12 form-group" align="center">
		<label class="col-sm-4 control-label">End date:</label>
		<div class='col-sm-7 input-group date' id='datetimepicker2'>
		  <input type='text' class="form-control" name="enddate" id="enddate" value=""/>
		  <span class="input-group-addon">
		    <span class="glyphicon glyphicon-calendar"></span>
		  </span>
		</div>
	      </div>
	    </div>
	    <div class="row">
	      <div class="col-md-12 form-group" align="right">
		<button type="button" id="add_entry" class="btn btn-info btn-md" onclick="drawTable()">GO</button>
	      </div>
	    </div>
	  </form>
	</div>
	<div class="col-md-7">
	  <!--Contact details were here. Removed them -->
	  <h2 class="intro-text text-center"> Chart </h2>
	  <div class="row">
	    <div id="chart"></div>
	  </div>
	</div>
	<div class="clearfix"></div>
      </div>
    </div>
  </div>
</div>

<div class="container">
  <div class="row">
    <div class="box">
      <div class="col-lg-12">
	<hr>
	<h2 class="intro-text text-center">Readings 
          <strong>form</strong>
	</h2>
	<hr>
	<p>Enter Readings here</p>
	<div class="col-lg-12">
	  <div class="table-responsive">
	    <table id="table_data" class="table table-stripped">
	      <thead>
		<tr>
		  <th class="col-lg-1"></th>
		  <th class="col-lg-2" align="center">Date</th>
		  <th class="col-lg-2" align="center">Reading 1</th>
		  <th class="col-lg-2" align="center">Reading 2</th>
		  <th class="col-lg-2" align="center">Remarks</th>
		</tr>
	      </thead>
	      <tbody>
	      </tbody>
		
	    </table>
	  </div>
	</div>
      </div>
    </div>
  </div>   
</div>
<!-- /.container -->
{% endblock main_content %}
{% block footer_content %}{% endblock footer_content %}

{% block custom_js %}
<script>
  var x
  var y
  var z
  var dates = ['Time']
  var read1 = ['reading1']
  var read2 = ['reading2'] 
  var read3 = ['reading3']

  $(function(){
//  drawChart();
  $('#datetimepicker1').datetimepicker({format: 'YYYY-MM-DD'});
  $('#datetimepicker2').datetimepicker({format: 'YYYY-MM-DD'});
  $("#datetimepicker1").on("dp.change", function (e) {
  $('#datetimepicker2').data("DateTimePicker").minDate(e.date);
  x=document.getElementById("startdate").value;
  
  });
  $("#datetimepicker2").on("dp.change", function (e) {
  $('#datetimepicker1').data("DateTimePicker").maxDate(e.date);
  y=document.getElementById("enddate").value;
  //drawTable();
  });
  });
  
function drawTable() {
    var date1 = new Date(y);
    var date2 = new Date(x);
    var timeDiff = Math.abs(date2.getTime() - date1.getTime());
    var z = Math.ceil(timeDiff / (1000 * 3600 * 24));
    var table = document.getElementById('table_data').getElementsByTagName('tbody');
    var tabled = document.getElementById('table_data');
    var itemcount = 1;
    var dte = date2;
//    dates.push(moment(dte).format('DD-MM-YYYY'))
    var countContent = '<tr><td class="section">';
    var dateContent = '</td><td><input type="text" name="date" class="dateonly" value='
    var newRowContent = ' placeholder="" disabled/></td><td><input type="text" name="reading1" class="numbersOnly" id='
    var reading1col = ' onkeypress="validate(event)" onblur="plotValue(this)" /></td><td><input type="text" name="reading2" class="numbersOnly" id='
    var reading2col = ' onkeypress="validate(event)" onblur="plotValue(this)" /></td><td><input type="text" name="reading3" class="numbersOnly" id=' 
    var reading3col = ' onkeypress="validate(event)" onblur="plotValue(this)" /></td><td><input type="text" name="remark"/></td></tr>';

   //<button type="button" name="delete_row" class="glyphicon glyphicon-remove-sign" onclick="deleteRow(this)"></button> #delete button             
    //rows = table.insertRow(z);

    if (tabled.rows.length > 0) {
        $("#table_data tbody tr").remove();
        for (i = 0; i < z + 1; i++) {
            //keep track of first date. Increment based on the variable
            html = countContent + String(itemcount) + dateContent + moment(dte).format('YYYY-MM-DD') + newRowContent + String(itemcount) + reading1col + String(itemcount) + reading2col;
            
	    read1.push(0)
	    read2.push(0)
	    read3.push(0)
	    dates.push(moment(dte).format('DD-MM-YYYY'))

            itemcount++;
            dte = moment(dte).add(1,'days');

            $('#table_data > tbody').append(html);

        }
    }
 drawChart();
}		  
  /*
  $('#feature_id').on("change", function(){
  $.get("fetch_options2/"+$('#feature_id').val(),
  function (data){
  $('#parameter_id').html(data);
  }
  , "html")
  }); */
  
  
  $(document).ready(
  
  function() {
  $("select#feature").change(function() {
  if ($(this).val() == 'Z') {
  $("select#parameter").html("<option>Select parameter</option>");
  $("select#parameter").attr('disabled', true);
  }
  else {
  var url = "/feature/" + $(this).val() + "/all_json_models";
  var brand = $(this).val();
  $.getJSON(url, function(models) {
  var options = '<option value="Z">Select parameter</option>';
  for (var i = 0; i < models.length; i++) {
                      options += '<option value="' + models[i].fields['id'] + '">' + models[i].fields['name'] + '</option>';
                      }
                      $("select#parameter").html(options);
                      $("select#parameter option:first").attr('selected', 'selected');
                      $("select#parameter").attr('disabled', false);
                      });
		      }
		      });
		      
		      
		      $("select#feature").change(function(vent) {
		      if ($(this).val() == -1) {
                      return;
		      }
		      //myAwesomeFunctionToCallWhenAModelIsSelected();
		      });
		      });
		      
		      
											       
		      function drawChart(){
		      var chart = c3.generate({
		      bindto: '#chart',
		      data: {
		      x:'Time',
		      columns: [
		      dates,
		      read1,
		      read2,
		      ],
		      xFormat: '%d-%m-%Y',

		      },
		      axis: {
		      x: {
		      type: 'timeseries',
		      tick: {
                      format: '%d-%m-%Y'
		      }
		      }
		      }
		      });
		      }

		      function plotValue(element)
		      {
		      name = element.name
		      id = element.id
		      value = element.value
 
		      console.log(element.name);
		      console.log(element.id);
		      console.log(element.value);
		      
		      if (name == "reading1")
		      {
		      read1[id] = value;
		      }
		      
		      else if (name == "reading2")
		      {
		      read2[id] = value;
		      }
		      drawChart();
		      }
		      
		      function validate(evt) {
		      var theEvent = evt || window.event;
		      var key = theEvent.keyCode || theEvent.which;
		      key = String.fromCharCode( key );
		      var regex = /[0-9]|\./;
		      if( !regex.test(key) ) {
		      theEvent.returnValue = false;
		      alert('Input integers only');
		      if(theEvent.preventDefault) theEvent.preventDefault();
		      }
		      }

</script>

{% endblock custom_js %}
